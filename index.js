import puppeteer from 'puppeteer';
import * as fs from 'fs';
import * as path from 'path';
import * as csv from 'fast-csv';
import axios from 'axios';
import dotenv from 'dotenv';
import { writeToPath } from '@fast-csv/format';

dotenv.config();

var rows = [];
(async()=>{

await fs.createReadStream(path.resolve('./Wasmer - overflow.csv'))
    .pipe(csv.parse({ headers: true }))
    .on('error', error => console.error(error))
    .on('data', async row => 
        {
            rows.push(row);               
        }
    )
    .on('end', async rowCount => {
      var newr =  await getDescriptions();
        const csvFilePath = 'output.csv';

writeToPath(csvFilePath, newr, { headers: true })
    .on('error', err => console.error(err))
    .on('finish', () => console.log('CSV file written successfully'));
    });
    async function getDescriptions(){
   await (async ()=>{
for(var r of rows){    const browser = await puppeteer.launch({headless:true});
    const page = await browser.newPage();
  
    // Navigate the page to a URL
    await page.goto(r.URL);
  
    // Set screen size
    await page.setViewport({width: 1080, height: 1024});
  
    // Type into search box
  
    // Wait and click on first result
  
    // Locate the full title with a unique string
    const textSelector = await page.waitForSelector(
"#discussion_bucket > div > div.Layout-main > div > div.js-discussion.ml-0.pl-0.ml-md-6.pl-md-3 > div.TimelineItem.pt-0.js-comment-container.js-socket-channel.js-updatable-content > div.timeline-comment-group.js-minimizable-comment-group.js-targetable-element.TimelineItem-body.my-0 > div > div.edit-comment-hide > task-lists > table > tbody > tr:nth-child(1) > td"    );
    const description = await textSelector?.evaluate(el => el.textContent);
  await axios.post("https://api.openai.com/v1/chat/completions", {
    model: "gpt-3.5-turbo-16k",
   messages: [{role: "user", content: `Decide if this github issue is about a possible bug or if it is just a question. If it is a question, simply write no, if it is about a possible bug, write yes and nothing else.Description: ${description}`}],
   temperature: 0.7
  }, {headers:{'Authorization': `Bearer ${process.env.API_TOKEN}`}}).then(async (response)=>{
    var isvulnerability = response.data.choices[0].message.content;
    r["Real vulnerability"] = isvulnerability;
    await browser.close();

  }).catch(async e=>{
    await browser.close();

    console.error(e)
  })

    // Print the full title
  
}})();
return rows;
    }
})();